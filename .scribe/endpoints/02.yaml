name: '3 Menus'
description: |-

  APIs for managing menus
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/menu
    metadata:
      groupName: '3 Menus'
      groupDescription: |-

        APIs for managing menus
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a list of all menus'
      description: 'No auth required'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "menus": [
              {
                "id": 1,
                "name": "Menu 1",
                "image": "images/menu1.jpg",
                "description": "Description of Menu 1"
              },
              {
                "id": 2,
                "name": "Menu 2",
                "image": "images/menu2.jpg",
                "description": "Description of Menu 2"
              }
            ],
            "lastMenu": {
              "id": 1,
              "name": "Menu 1",
              "image": "images/menu1.jpg",
              "description": "Description of Menu 1"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/menu
    metadata:
      groupName: '3 Menus'
      groupDescription: |-

        APIs for managing menus
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new menu'
      description: 'Admin auth required'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The menu's name"
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: "The menu's image"
        required: true
        example: magnam
        type: image
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: "The menu's description"
        required: true
        example: 'Repellat illo rerum facere minima aut consequuntur iusto.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: id
      image: magnam
      description: 'Repellat illo rerum facere minima aut consequuntur iusto.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Menu created successfully",
            "data": {
              "id": 1,
              "name": "Menu 1",
              "image": "images/menu1.jpg",
              "description": "Description of Menu 1"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/menu/{id}'
    metadata:
      groupName: '3 Menus'
      groupDescription: |-

        APIs for managing menus
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single menu by ID'
      description: 'No auth required'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: laborum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Menu 1",
            "image": "images/menu1.jpg",
            "description": "Description of Menu 1"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/menu/{id}'
    metadata:
      groupName: '3 Menus'
      groupDescription: |-

        APIs for managing menus
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a single menu by ID'
      description: 'Admin auth required'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: officiis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The menu's name"
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: "The menu's image"
        required: true
        example: maiores
        type: image
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: "The menu's description"
        required: true
        example: 'Ipsum praesentium quae iure quos eum dicta.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: debitis
      image: maiores
      description: 'Ipsum praesentium quae iure quos eum dicta.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Menu updated successfully",
            "data": {
              "id": 1,
              "name": "Menu 1",
              "image": "images/menu1.jpg",
              "description": "Description of Menu 1"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/menu/{id}'
    metadata:
      groupName: '3 Menus'
      groupDescription: |-

        APIs for managing menus
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a single menu by ID'
      description: 'Admin auth required'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: ipsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ipsum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Menu deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
