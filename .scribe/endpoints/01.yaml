name: '1 Security'
description: |-

  APIs for user registration and login and logout
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: '1 Security'
      groupDescription: |-

        APIs for user registration and login and logout
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's name"
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email"
        required: true
        example: koepp.shania@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password"
        required: true
        example: 'tn^nC-pR".GRiuKr'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: "The user's phone number"
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: eum
      email: koepp.shania@example.com
      password: 'tn^nC-pR".GRiuKr'
      phone: omnis
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "User registered successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: '1 Security'
      groupDescription: |-

        APIs for user registration and login and logout
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email"
        required: true
        example: catherine.beatty@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password"
        required: true
        example: 'gv78hVk!/_]{zq'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: catherine.beatty@example.com
      password: 'gv78hVk!/_]{zq'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "string"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/loginphone
    metadata:
      groupName: '1 Security'
      groupDescription: |-

        APIs for user registration and login and logout
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: bxaxhpzr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      phone: bxaxhpzr
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/editprofile
    metadata:
      groupName: '1 Security'
      groupDescription: |-

        APIs for user registration and login and logout
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: '1 Security'
      groupDescription: |-

        APIs for user registration and login and logout
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
